{"ast":null,"code":"import { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction MedicineReminderComponent_option_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(option_r1);\n  }\n}\nfunction MedicineReminderComponent_option_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\"\", option_r2, \" Time\", option_r2 > 1 ? \"s\" : \"\", \"\");\n  }\n}\nfunction MedicineReminderComponent_div_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"h3\");\n    i0.ɵɵtext(2, \"Submitted Data:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"pre\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.submittedJson);\n  }\n}\nexport let MedicineReminderComponent = /*#__PURE__*/(() => {\n  class MedicineReminderComponent {\n    constructor(fb) {\n      this.fb = fb;\n      this.submittedJson = null;\n      this.scheduleOptions = ['Daily', 'Weekly', 'Monthly', 'As Needed'];\n      this.repeatOptions = [1, 2, 3, 4, 5]; // Times per day\n    }\n    ngOnInit() {\n      this.medicineReminderForm = this.fb.group({\n        medicine: this.fb.group({\n          name: ['', Validators.required],\n          power: ['', Validators.required],\n          dose: ['', Validators.required]\n        }),\n        reminder: this.fb.group({\n          schedule: ['Daily', Validators.required],\n          startDate: ['', Validators.required],\n          endDate: ['', Validators.required],\n          repeatCount: [1, Validators.required],\n          alarmTime: ['', Validators.required],\n          withFood: [false],\n          instructions: ['']\n        })\n      });\n    }\n    onSubmit() {\n      if (this.medicineReminderForm.valid) {\n        this.submittedJson = JSON.stringify(this.medicineReminderForm.value, null, 2);\n        console.log('Medicine Reminder Submitted:', this.medicineReminderForm.value);\n      } else {\n        this.medicineReminderForm.markAllAsTouched();\n      }\n    }\n    static {\n      this.ɵfac = function MedicineReminderComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MedicineReminderComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: MedicineReminderComponent,\n        selectors: [[\"app-medicine-reminder\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 67,\n        vars: 5,\n        consts: [[1, \"container\"], [\"aria-labelledby\", \"form-title\", 3, \"ngSubmit\", \"formGroup\"], [\"formGroupName\", \"medicine\", 1, \"form-section\"], [1, \"section-header\"], [1, \"form-group\"], [\"for\", \"med-name\"], [\"id\", \"med-name\", \"type\", \"text\", \"formControlName\", \"name\", \"aria-describedby\", \"name-helper\", 1, \"form-control\"], [\"id\", \"name-helper\", 1, \"form-text\", \"text-muted\"], [\"for\", \"med-power\"], [\"id\", \"med-power\", \"type\", \"text\", \"formControlName\", \"power\", \"aria-describedby\", \"power-helper\", 1, \"form-control\"], [\"id\", \"power-helper\", 1, \"form-text\", \"text-muted\"], [\"for\", \"med-dose\"], [\"id\", \"med-dose\", \"type\", \"text\", \"formControlName\", \"dose\", \"aria-describedby\", \"dose-helper\", 1, \"form-control\"], [\"id\", \"dose-helper\", 1, \"form-text\", \"text-muted\"], [\"formGroupName\", \"reminder\", 1, \"form-section\"], [\"for\", \"rem-schedule\"], [\"id\", \"rem-schedule\", \"formControlName\", \"schedule\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-row\"], [\"for\", \"rem-start-date\"], [\"id\", \"rem-start-date\", \"type\", \"date\", \"formControlName\", \"startDate\", \"placeholder\", \"Select Date\", 1, \"form-control\"], [\"for\", \"rem-end-date\"], [\"id\", \"rem-end-date\", \"type\", \"date\", \"formControlName\", \"endDate\", \"placeholder\", \"Select Date\", 1, \"form-control\"], [\"for\", \"rem-repeat\"], [\"id\", \"rem-repeat\", \"formControlName\", \"repeatCount\", 1, \"form-control\"], [\"for\", \"rem-alarm-time\"], [1, \"alarm-time-group\"], [\"id\", \"rem-alarm-time\", \"type\", \"time\", \"formControlName\", \"alarmTime\", \"placeholder\", \"Select Time\", 1, \"form-control\"], [1, \"form-group\", \"checkbox-group\"], [\"id\", \"rem-with-food\", \"type\", \"checkbox\", \"formControlName\", \"withFood\"], [\"for\", \"rem-with-food\"], [\"for\", \"rem-instructions\"], [\"id\", \"rem-instructions\", \"formControlName\", \"instructions\", \"placeholder\", \"Your instructions\", \"aria-describedby\", \"instructions-helper\", 1, \"form-control\"], [\"id\", \"instructions-helper\", 1, \"form-text\", \"text-muted\"], [\"type\", \"submit\", \"title\", \"Save the reminder and add another one\", 1, \"submit-btn\", 3, \"disabled\"], [\"class\", \"result-container\", \"aria-live\", \"polite\", 4, \"ngIf\"], [3, \"value\"], [\"aria-live\", \"polite\", 1, \"result-container\"]],\n        template: function MedicineReminderComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Medicine Reminder\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function MedicineReminderComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(4, \"fieldset\", 2)(5, \"legend\", 3);\n            i0.ɵɵtext(6, \"MEDICINE\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"div\", 4)(8, \"label\", 5);\n            i0.ɵɵtext(9, \"Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(10, \"input\", 6);\n            i0.ɵɵelementStart(11, \"small\", 7);\n            i0.ɵɵtext(12, \"Enter the name of the medicine.\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(13, \"div\", 4)(14, \"label\", 8);\n            i0.ɵɵtext(15, \"Power/mg\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(16, \"input\", 9);\n            i0.ɵɵelementStart(17, \"small\", 10);\n            i0.ɵɵtext(18, \"Specify the strength (e.g., 500mg).\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(19, \"div\", 4)(20, \"label\", 11);\n            i0.ɵɵtext(21, \"Dose\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(22, \"input\", 12);\n            i0.ɵɵelementStart(23, \"small\", 13);\n            i0.ɵɵtext(24, \"Specify the dosage (e.g., 1 tablet).\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(25, \"fieldset\", 14)(26, \"legend\", 3);\n            i0.ɵɵtext(27, \"REMINDER\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(28, \"div\", 4)(29, \"label\", 15);\n            i0.ɵɵtext(30, \"Schedule\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(31, \"select\", 16);\n            i0.ɵɵtemplate(32, MedicineReminderComponent_option_32_Template, 2, 2, \"option\", 17);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(33, \"div\", 18)(34, \"div\", 4)(35, \"label\", 19);\n            i0.ɵɵtext(36, \"Start Date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(37, \"input\", 20);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(38, \"div\", 4)(39, \"label\", 21);\n            i0.ɵɵtext(40, \"End Date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(41, \"input\", 22);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(42, \"div\", 4)(43, \"label\", 23);\n            i0.ɵɵtext(44, \"Repeat no. of times (per day)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(45, \"select\", 24);\n            i0.ɵɵtemplate(46, MedicineReminderComponent_option_46_Template, 2, 3, \"option\", 17);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(47, \"div\", 4)(48, \"label\", 25);\n            i0.ɵɵtext(49, \"Set alarm time\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(50, \"div\", 26)(51, \"span\");\n            i0.ɵɵtext(52, \"Alarm 1\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(53, \"input\", 27);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(54, \"div\", 28);\n            i0.ɵɵelement(55, \"input\", 29);\n            i0.ɵɵelementStart(56, \"label\", 30);\n            i0.ɵɵtext(57, \"With food\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(58, \"div\", 4)(59, \"label\", 31);\n            i0.ɵɵtext(60, \"Other instructions\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(61, \"textarea\", 32);\n            i0.ɵɵelementStart(62, \"small\", 33);\n            i0.ɵɵtext(63, \"Add any special instructions here.\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(64, \"button\", 34);\n            i0.ɵɵtext(65, \"Save & Add More\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(66, MedicineReminderComponent_div_66_Template, 5, 1, \"div\", 35);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.medicineReminderForm);\n            i0.ɵɵadvance(29);\n            i0.ɵɵproperty(\"ngForOf\", ctx.scheduleOptions);\n            i0.ɵɵadvance(14);\n            i0.ɵɵproperty(\"ngForOf\", ctx.repeatOptions);\n            i0.ɵɵadvance(18);\n            i0.ɵɵproperty(\"disabled\", ctx.medicineReminderForm.invalid);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.submittedJson);\n          }\n        },\n        dependencies: [CommonModule, i2.NgForOf, i2.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName],\n        styles: [\".container[_ngcontent-%COMP%]{max-width:700px;margin:2rem auto;padding:2rem;border-radius:8px}.form-section[_ngcontent-%COMP%]{border-radius:8px;padding:1.5rem;margin-bottom:2rem}.section-header[_ngcontent-%COMP%]{color:#495057;margin-bottom:1rem;padding:0 .5rem;width:auto;background-color:#fff}.form-group[_ngcontent-%COMP%]{margin-bottom:1.25rem}.form-control[_ngcontent-%COMP%]{width:100%;padding:.75rem;border:1px solid #ced4da;border-radius:4px;box-sizing:border-box}.form-text[_ngcontent-%COMP%]{color:#6c757d;margin-top:.25rem}.form-row[_ngcontent-%COMP%]{display:flex;gap:1rem}.form-row[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{flex:1}.alarm-time-group[_ngcontent-%COMP%]{display:flex;align-items:center;gap:1rem}.checkbox-group[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem}.checkbox-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:auto}.submit-btn[_ngcontent-%COMP%]{width:100%;padding:.75rem;color:#fff;background-color:#ed8b00;border:none;border-radius:4px;cursor:pointer;transition:background-color .2s}.submit-btn[_ngcontent-%COMP%]:disabled{background-color:#ccc;cursor:not-allowed}.submit-btn[_ngcontent-%COMP%]:hover{background-color:#d67c00}.result-container[_ngcontent-%COMP%]{margin-top:2rem;padding:1rem;background-color:#f8f9fa;border:1px solid #dee2e6;border-radius:4px}pre[_ngcontent-%COMP%]{background-color:#e9ecef;padding:1rem;border-radius:4px;white-space:pre-wrap;word-wrap:break-word}\"]\n      });\n    }\n  }\n  return MedicineReminderComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction MedicineReminderComponent_option_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(option_r1);\n  }\n}\nfunction MedicineReminderComponent_option_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\"\", option_r2, \" Time\", option_r2 > 1 ? \"s\" : \"\", \"\");\n  }\n}\nfunction MedicineReminderComponent_div_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"h3\");\n    i0.ɵɵtext(2, \"Submitted Data:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"pre\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.submittedJson);\n  }\n}\nexport class MedicineReminderComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.submittedJson = null;\n    this.scheduleOptions = ['Daily', 'Weekly', 'Monthly', 'As Needed'];\n    this.repeatOptions = [1, 2, 3, 4, 5]; // Times per day\n  }\n  ngOnInit() {\n    this.medicineReminderForm = this.fb.group({\n      medicine: this.fb.group({\n        name: ['', Validators.required],\n        power: ['', Validators.required],\n        dose: ['', Validators.required]\n      }),\n      reminder: this.fb.group({\n        schedule: ['Daily', Validators.required],\n        startDate: ['', Validators.required],\n        endDate: ['', Validators.required],\n        repeatCount: [1, Validators.required],\n        alarmTime: ['', Validators.required],\n        withFood: [false],\n        instructions: ['']\n      })\n    });\n  }\n  onSubmit() {\n    if (this.medicineReminderForm.valid) {\n      this.submittedJson = JSON.stringify(this.medicineReminderForm.value, null, 2);\n      console.log('Medicine Reminder Submitted:', this.medicineReminderForm.value);\n    } else {\n      this.medicineReminderForm.markAllAsTouched();\n    }\n  }\n  static {\n    this.ɵfac = function MedicineReminderComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MedicineReminderComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MedicineReminderComponent,\n      selectors: [[\"app-medicine-reminder\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 67,\n      vars: 5,\n      consts: [[1, \"container\"], [\"aria-labelledby\", \"form-title\", 3, \"ngSubmit\", \"formGroup\"], [\"formGroupName\", \"medicine\", 1, \"form-section\"], [1, \"section-header\"], [1, \"form-group\"], [\"for\", \"med-name\"], [\"id\", \"med-name\", \"type\", \"text\", \"formControlName\", \"name\", \"aria-describedby\", \"name-helper\", 1, \"form-control\"], [\"id\", \"name-helper\", 1, \"form-text\", \"text-muted\"], [\"for\", \"med-power\"], [\"id\", \"med-power\", \"type\", \"text\", \"formControlName\", \"power\", \"aria-describedby\", \"power-helper\", 1, \"form-control\"], [\"id\", \"power-helper\", 1, \"form-text\", \"text-muted\"], [\"for\", \"med-dose\"], [\"id\", \"med-dose\", \"type\", \"text\", \"formControlName\", \"dose\", \"aria-describedby\", \"dose-helper\", 1, \"form-control\"], [\"id\", \"dose-helper\", 1, \"form-text\", \"text-muted\"], [\"formGroupName\", \"reminder\", 1, \"form-section\"], [\"for\", \"rem-schedule\"], [\"id\", \"rem-schedule\", \"formControlName\", \"schedule\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-row\"], [\"for\", \"rem-start-date\"], [\"id\", \"rem-start-date\", \"type\", \"date\", \"formControlName\", \"startDate\", \"placeholder\", \"Select Date\", 1, \"form-control\"], [\"for\", \"rem-end-date\"], [\"id\", \"rem-end-date\", \"type\", \"date\", \"formControlName\", \"endDate\", \"placeholder\", \"Select Date\", 1, \"form-control\"], [\"for\", \"rem-repeat\"], [\"id\", \"rem-repeat\", \"formControlName\", \"repeatCount\", 1, \"form-control\"], [\"for\", \"rem-alarm-time\"], [1, \"alarm-time-group\"], [\"id\", \"rem-alarm-time\", \"type\", \"time\", \"formControlName\", \"alarmTime\", \"placeholder\", \"Select Time\", 1, \"form-control\"], [1, \"form-group\", \"checkbox-group\"], [\"id\", \"rem-with-food\", \"type\", \"checkbox\", \"formControlName\", \"withFood\"], [\"for\", \"rem-with-food\"], [\"for\", \"rem-instructions\"], [\"id\", \"rem-instructions\", \"formControlName\", \"instructions\", \"placeholder\", \"Your instructions\", \"aria-describedby\", \"instructions-helper\", 1, \"form-control\"], [\"id\", \"instructions-helper\", 1, \"form-text\", \"text-muted\"], [\"type\", \"submit\", \"title\", \"Save the reminder and add another one\", 1, \"submit-btn\", 3, \"disabled\"], [\"class\", \"result-container\", \"aria-live\", \"polite\", 4, \"ngIf\"], [3, \"value\"], [\"aria-live\", \"polite\", 1, \"result-container\"]],\n      template: function MedicineReminderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Medicine Reminder\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function MedicineReminderComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"fieldset\", 2)(5, \"legend\", 3);\n          i0.ɵɵtext(6, \"MEDICINE\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 4)(8, \"label\", 5);\n          i0.ɵɵtext(9, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 6);\n          i0.ɵɵelementStart(11, \"small\", 7);\n          i0.ɵɵtext(12, \"Enter the name of the medicine.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 4)(14, \"label\", 8);\n          i0.ɵɵtext(15, \"Power/mg\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 9);\n          i0.ɵɵelementStart(17, \"small\", 10);\n          i0.ɵɵtext(18, \"Specify the strength (e.g., 500mg).\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 4)(20, \"label\", 11);\n          i0.ɵɵtext(21, \"Dose\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"input\", 12);\n          i0.ɵɵelementStart(23, \"small\", 13);\n          i0.ɵɵtext(24, \"Specify the dosage (e.g., 1 tablet).\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(25, \"fieldset\", 14)(26, \"legend\", 3);\n          i0.ɵɵtext(27, \"REMINDER\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"div\", 4)(29, \"label\", 15);\n          i0.ɵɵtext(30, \"Schedule\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"select\", 16);\n          i0.ɵɵtemplate(32, MedicineReminderComponent_option_32_Template, 2, 2, \"option\", 17);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(33, \"div\", 18)(34, \"div\", 4)(35, \"label\", 19);\n          i0.ɵɵtext(36, \"Start Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(37, \"input\", 20);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"div\", 4)(39, \"label\", 21);\n          i0.ɵɵtext(40, \"End Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(41, \"input\", 22);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(42, \"div\", 4)(43, \"label\", 23);\n          i0.ɵɵtext(44, \"Repeat no. of times (per day)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(45, \"select\", 24);\n          i0.ɵɵtemplate(46, MedicineReminderComponent_option_46_Template, 2, 3, \"option\", 17);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(47, \"div\", 4)(48, \"label\", 25);\n          i0.ɵɵtext(49, \"Set alarm time\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(50, \"div\", 26)(51, \"span\");\n          i0.ɵɵtext(52, \"Alarm 1\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(53, \"input\", 27);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(54, \"div\", 28);\n          i0.ɵɵelement(55, \"input\", 29);\n          i0.ɵɵelementStart(56, \"label\", 30);\n          i0.ɵɵtext(57, \"With food\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(58, \"div\", 4)(59, \"label\", 31);\n          i0.ɵɵtext(60, \"Other instructions\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(61, \"textarea\", 32);\n          i0.ɵɵelementStart(62, \"small\", 33);\n          i0.ɵɵtext(63, \"Add any special instructions here.\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(64, \"button\", 34);\n          i0.ɵɵtext(65, \"Save & Add More\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(66, MedicineReminderComponent_div_66_Template, 5, 1, \"div\", 35);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.medicineReminderForm);\n          i0.ɵɵadvance(29);\n          i0.ɵɵproperty(\"ngForOf\", ctx.scheduleOptions);\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"ngForOf\", ctx.repeatOptions);\n          i0.ɵɵadvance(18);\n          i0.ɵɵproperty(\"disabled\", ctx.medicineReminderForm.invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.submittedJson);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName],\n      styles: [\".container[_ngcontent-%COMP%] {\\n  max-width: 700px;\\n  margin: 2rem auto;\\n  padding: 2rem;\\n  border-radius: 8px;\\n}\\n\\n.form-section[_ngcontent-%COMP%] {\\n  border-radius: 8px;\\n  padding: 1.5rem;\\n  margin-bottom: 2rem;\\n}\\n\\n.section-header[_ngcontent-%COMP%] {\\n  font-size: 1.2rem;\\n  font-weight: bold;\\n  color: #495057;\\n  margin-bottom: 1rem;\\n  padding: 0 0.5rem;\\n  width: auto;\\n  background-color: #fff;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 1.25rem;\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 0.75rem;\\n  font-size: 1rem;\\n  border: 1px solid #ced4da;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n}\\n\\n.form-text[_ngcontent-%COMP%] {\\n  font-size: 0.875rem;\\n  color: #6c757d;\\n  margin-top: 0.25rem;\\n}\\n\\n.form-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 1rem;\\n}\\n\\n.form-row[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%] {\\n  flex: 1;\\n}\\n\\n.alarm-time-group[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 1rem;\\n}\\n\\n.checkbox-group[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n}\\n\\n.checkbox-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: auto;\\n}\\n\\n.submit-btn[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 0.75rem;\\n  font-size: 1.1rem;\\n  font-weight: bold;\\n  color: #fff;\\n  background-color: #007bff;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  transition: background-color 0.2s;\\n}\\n\\n.submit-btn[_ngcontent-%COMP%]:disabled {\\n  background-color: #cccccc;\\n  cursor: not-allowed;\\n}\\n\\n.result-container[_ngcontent-%COMP%] {\\n  margin-top: 2rem;\\n  padding: 1rem;\\n  background-color: #f8f9fa;\\n  border: 1px solid #dee2e6;\\n  border-radius: 4px;\\n}\\n\\npre[_ngcontent-%COMP%] {\\n  background-color: #e9ecef;\\n  padding: 1rem;\\n  border-radius: 4px;\\n  white-space: pre-wrap;\\n  word-wrap: break-word;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbWVkaWNpbmUtcmVtaW5kZXIvbWVkaWNpbmUtcmVtaW5kZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsYUFBYTtFQUNiLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQixXQUFXO0VBQ1gsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsY0FBYztFQUNkLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxPQUFPO0FBQ1Q7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFNBQVM7QUFDWDs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsaUJBQWlCO0VBQ2pCLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsaUNBQWlDO0FBQ25DOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2IseUJBQXlCO0VBQ3pCLHlCQUF5QjtFQUN6QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIscUJBQXFCO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogNzAwcHg7XG4gIG1hcmdpbjogMnJlbSBhdXRvO1xuICBwYWRkaW5nOiAycmVtO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG5cbi5mb3JtLXNlY3Rpb24ge1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIHBhZGRpbmc6IDEuNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbn1cblxuLnNlY3Rpb24taGVhZGVyIHtcbiAgZm9udC1zaXplOiAxLjJyZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogIzQ5NTA1NztcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgcGFkZGluZzogMCAwLjVyZW07XG4gIHdpZHRoOiBhdXRvO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufVxuXG4uZm9ybS1ncm91cCB7XG4gIG1hcmdpbi1ib3R0b206IDEuMjVyZW07XG59XG5cbi5mb3JtLWNvbnRyb2wge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMC43NXJlbTtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2VkNGRhO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5mb3JtLXRleHQge1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBjb2xvcjogIzZjNzU3ZDtcbiAgbWFyZ2luLXRvcDogMC4yNXJlbTtcbn1cblxuLmZvcm0tcm93IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZ2FwOiAxcmVtO1xufVxuXG4uZm9ybS1yb3cgLmZvcm0tZ3JvdXAge1xuICBmbGV4OiAxO1xufVxuXG4uYWxhcm0tdGltZS1ncm91cCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMXJlbTtcbn1cblxuLmNoZWNrYm94LWdyb3VwIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiAwLjVyZW07XG59XG5cbi5jaGVja2JveC1ncm91cCBpbnB1dCB7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4uc3VibWl0LWJ0biB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwLjc1cmVtO1xuICBmb250LXNpemU6IDEuMXJlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG59XG5cbi5zdWJtaXQtYnRuOmRpc2FibGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NjY2NjYztcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbn1cblxuLnJlc3VsdC1jb250YWluZXIge1xuICBtYXJnaW4tdG9wOiAycmVtO1xuICBwYWRkaW5nOiAxcmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZGVlMmU2O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG5cbnByZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWY7XG4gIHBhZGRpbmc6IDFyZW07XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","ReactiveFormsModule","CommonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r1","ɵɵadvance","ɵɵtextInterpolate","option_r2","ɵɵtextInterpolate2","ctx_r2","submittedJson","MedicineReminderComponent","constructor","fb","scheduleOptions","repeatOptions","ngOnInit","medicineReminderForm","group","medicine","name","required","power","dose","reminder","schedule","startDate","endDate","repeatCount","alarmTime","withFood","instructions","onSubmit","valid","JSON","stringify","value","console","log","markAllAsTouched","ɵɵdirectiveInject","i1","FormBuilder","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","MedicineReminderComponent_Template","rf","ctx","ɵɵlistener","MedicineReminderComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","MedicineReminderComponent_option_32_Template","MedicineReminderComponent_option_46_Template","MedicineReminderComponent_div_66_Template","invalid","i2","NgForOf","NgIf","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","CheckboxControlValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","FormGroupName","styles"],"sources":["C:\\Users\\np59585\\gemini-angular-app\\Sample1\\src\\app\\pages\\medicine-reminder\\medicine-reminder.component.ts","C:\\Users\\np59585\\gemini-angular-app\\Sample1\\src\\app\\pages\\medicine-reminder\\medicine-reminder.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-medicine-reminder',\n  templateUrl: './medicine-reminder.component.html',\n  styleUrls: ['./medicine-reminder.component.css'],\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule]\n})\nexport class MedicineReminderComponent implements OnInit {\n  medicineReminderForm!: FormGroup;\n  submittedJson: string | null = null;\n  scheduleOptions = ['Daily', 'Weekly', 'Monthly', 'As Needed'];\n  repeatOptions = [1, 2, 3, 4, 5]; // Times per day\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.medicineReminderForm = this.fb.group({\n      medicine: this.fb.group({\n        name: ['', Validators.required],\n        power: ['', Validators.required],\n        dose: ['', Validators.required]\n      }),\n      reminder: this.fb.group({\n        schedule: ['Daily', Validators.required],\n        startDate: ['', Validators.required],\n        endDate: ['', Validators.required],\n        repeatCount: [1, Validators.required],\n        alarmTime: ['', Validators.required],\n        withFood: [false],\n        instructions: ['']\n      })\n    });\n  }\n\n  onSubmit(): void {\n    if (this.medicineReminderForm.valid) {\n      this.submittedJson = JSON.stringify(this.medicineReminderForm.value, null, 2);\n      console.log('Medicine Reminder Submitted:', this.medicineReminderForm.value);\n    } else {\n      this.medicineReminderForm.markAllAsTouched();\n    }\n  }\n}","<div class=\"container\">\n  <h2>Medicine Reminder</h2>\n  <form [formGroup]=\"medicineReminderForm\" (ngSubmit)=\"onSubmit()\" aria-labelledby=\"form-title\">\n\n    <!-- Medicine Section -->\n    <fieldset formGroupName=\"medicine\" class=\"form-section\">\n      <legend class=\"section-header\">MEDICINE</legend>\n      <div class=\"form-group\">\n        <label for=\"med-name\">Name</label>\n        <input id=\"med-name\" type=\"text\" formControlName=\"name\" class=\"form-control\" aria-describedby=\"name-helper\">\n        <small id=\"name-helper\" class=\"form-text text-muted\">Enter the name of the medicine.</small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"med-power\">Power/mg</label>\n        <input id=\"med-power\" type=\"text\" formControlName=\"power\" class=\"form-control\" aria-describedby=\"power-helper\">\n        <small id=\"power-helper\" class=\"form-text text-muted\">Specify the strength (e.g., 500mg).</small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"med-dose\">Dose</label>\n        <input id=\"med-dose\" type=\"text\" formControlName=\"dose\" class=\"form-control\" aria-describedby=\"dose-helper\">\n        <small id=\"dose-helper\" class=\"form-text text-muted\">Specify the dosage (e.g., 1 tablet).</small>\n      </div>\n    </fieldset>\n\n    <!-- Reminder Section -->\n    <fieldset formGroupName=\"reminder\" class=\"form-section\">\n      <legend class=\"section-header\">REMINDER</legend>\n      <div class=\"form-group\">\n        <label for=\"rem-schedule\">Schedule</label>\n        <select id=\"rem-schedule\" formControlName=\"schedule\" class=\"form-control\">\n          <option *ngFor=\"let option of scheduleOptions\" [value]=\"option\">{{ option }}</option>\n        </select>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label for=\"rem-start-date\">Start Date</label>\n          <input id=\"rem-start-date\" type=\"date\" formControlName=\"startDate\" class=\"form-control\" placeholder=\"Select Date\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"rem-end-date\">End Date</label>\n          <input id=\"rem-end-date\" type=\"date\" formControlName=\"endDate\" class=\"form-control\" placeholder=\"Select Date\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"rem-repeat\">Repeat no. of times (per day)</label>\n        <select id=\"rem-repeat\" formControlName=\"repeatCount\" class=\"form-control\">\n          <option *ngFor=\"let option of repeatOptions\" [value]=\"option\">{{ option }} Time{{ option > 1 ? 's' : '' }}</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"rem-alarm-time\">Set alarm time</label>\n        <div class=\"alarm-time-group\">\n          <span>Alarm 1</span>\n          <input id=\"rem-alarm-time\" type=\"time\" formControlName=\"alarmTime\" class=\"form-control\" placeholder=\"Select Time\">\n        </div>\n      </div>\n      <div class=\"form-group checkbox-group\">\n        <input id=\"rem-with-food\" type=\"checkbox\" formControlName=\"withFood\">\n        <label for=\"rem-with-food\">With food</label>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"rem-instructions\">Other instructions</label>\n        <textarea id=\"rem-instructions\" formControlName=\"instructions\" class=\"form-control\" placeholder=\"Your instructions\" aria-describedby=\"instructions-helper\"></textarea>\n        <small id=\"instructions-helper\" class=\"form-text text-muted\">Add any special instructions here.</small>\n      </div>\n    </fieldset>\n\n    <!-- Action Button -->\n    <button type=\"submit\" [disabled]=\"medicineReminderForm.invalid\" class=\"submit-btn\" title=\"Save the reminder and add another one\">Save & Add More</button>\n  </form>\n\n  <!-- Display JSON Result -->\n  <div *ngIf=\"submittedJson\" class=\"result-container\" aria-live=\"polite\">\n    <h3>Submitted Data:</h3>\n    <pre>{{ submittedJson }}</pre>\n  </div>\n</div>\n"],"mappings":"AACA,SAAiCA,UAAU,EAAEC,mBAAmB,QAAQ,gBAAgB;AACxF,SAASC,YAAY,QAAQ,iBAAiB;;;;;;IC4BpCC,EAAA,CAAAC,cAAA,iBAAgE;IAAAD,EAAA,CAAAE,MAAA,GAAY;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAAtCH,EAAA,CAAAI,UAAA,UAAAC,SAAA,CAAgB;IAACL,EAAA,CAAAM,SAAA,EAAY;IAAZN,EAAA,CAAAO,iBAAA,CAAAF,SAAA,CAAY;;;;;IAgB5EL,EAAA,CAAAC,cAAA,iBAA8D;IAAAD,EAAA,CAAAE,MAAA,GAA4C;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAAtEH,EAAA,CAAAI,UAAA,UAAAI,SAAA,CAAgB;IAACR,EAAA,CAAAM,SAAA,EAA4C;IAA5CN,EAAA,CAAAS,kBAAA,KAAAD,SAAA,WAAAA,SAAA,oBAA4C;;;;;IA2BhHR,EADF,CAAAC,cAAA,cAAuE,SACjE;IAAAD,EAAA,CAAAE,MAAA,sBAAe;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACxBH,EAAA,CAAAC,cAAA,UAAK;IAAAD,EAAA,CAAAE,MAAA,GAAmB;IAC1BF,EAD0B,CAAAG,YAAA,EAAM,EAC1B;;;;IADCH,EAAA,CAAAM,SAAA,GAAmB;IAAnBN,EAAA,CAAAO,iBAAA,CAAAG,MAAA,CAAAC,aAAA,CAAmB;;;AD/D5B,OAAM,MAAOC,yBAAyB;EAMpCC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IAJtB,KAAAH,aAAa,GAAkB,IAAI;IACnC,KAAAI,eAAe,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,CAAC;IAC7D,KAAAC,aAAa,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAEK;EAEtCC,QAAQA,CAAA;IACN,IAAI,CAACC,oBAAoB,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MACxCC,QAAQ,EAAE,IAAI,CAACN,EAAE,CAACK,KAAK,CAAC;QACtBE,IAAI,EAAE,CAAC,EAAE,EAAExB,UAAU,CAACyB,QAAQ,CAAC;QAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE1B,UAAU,CAACyB,QAAQ,CAAC;QAChCE,IAAI,EAAE,CAAC,EAAE,EAAE3B,UAAU,CAACyB,QAAQ;OAC/B,CAAC;MACFG,QAAQ,EAAE,IAAI,CAACX,EAAE,CAACK,KAAK,CAAC;QACtBO,QAAQ,EAAE,CAAC,OAAO,EAAE7B,UAAU,CAACyB,QAAQ,CAAC;QACxCK,SAAS,EAAE,CAAC,EAAE,EAAE9B,UAAU,CAACyB,QAAQ,CAAC;QACpCM,OAAO,EAAE,CAAC,EAAE,EAAE/B,UAAU,CAACyB,QAAQ,CAAC;QAClCO,WAAW,EAAE,CAAC,CAAC,EAAEhC,UAAU,CAACyB,QAAQ,CAAC;QACrCQ,SAAS,EAAE,CAAC,EAAE,EAAEjC,UAAU,CAACyB,QAAQ,CAAC;QACpCS,QAAQ,EAAE,CAAC,KAAK,CAAC;QACjBC,YAAY,EAAE,CAAC,EAAE;OAClB;KACF,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACf,oBAAoB,CAACgB,KAAK,EAAE;MACnC,IAAI,CAACvB,aAAa,GAAGwB,IAAI,CAACC,SAAS,CAAC,IAAI,CAAClB,oBAAoB,CAACmB,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;MAC7EC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAACrB,oBAAoB,CAACmB,KAAK,CAAC;IAC9E,CAAC,MAAM;MACL,IAAI,CAACnB,oBAAoB,CAACsB,gBAAgB,EAAE;IAC9C;EACF;;;uCAlCW5B,yBAAyB,EAAAZ,EAAA,CAAAyC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAzB/B,yBAAyB;MAAAgC,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAA9C,EAAA,CAAA+C,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCVpCrD,EADF,CAAAC,cAAA,aAAuB,SACjB;UAAAD,EAAA,CAAAE,MAAA,wBAAiB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAC1BH,EAAA,CAAAC,cAAA,cAA8F;UAArDD,EAAA,CAAAuD,UAAA,sBAAAC,4DAAA;YAAA,OAAYF,GAAA,CAAArB,QAAA,EAAU;UAAA,EAAC;UAI5DjC,EADF,CAAAC,cAAA,kBAAwD,gBACvB;UAAAD,EAAA,CAAAE,MAAA,eAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAE9CH,EADF,CAAAC,cAAA,aAAwB,eACA;UAAAD,EAAA,CAAAE,MAAA,WAAI;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAClCH,EAAA,CAAAyD,SAAA,gBAA4G;UAC5GzD,EAAA,CAAAC,cAAA,gBAAqD;UAAAD,EAAA,CAAAE,MAAA,uCAA+B;UACtFF,EADsF,CAAAG,YAAA,EAAQ,EACxF;UAEJH,EADF,CAAAC,cAAA,cAAwB,gBACC;UAAAD,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACvCH,EAAA,CAAAyD,SAAA,gBAA+G;UAC/GzD,EAAA,CAAAC,cAAA,iBAAsD;UAAAD,EAAA,CAAAE,MAAA,2CAAmC;UAC3FF,EAD2F,CAAAG,YAAA,EAAQ,EAC7F;UAEJH,EADF,CAAAC,cAAA,cAAwB,iBACA;UAAAD,EAAA,CAAAE,MAAA,YAAI;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAClCH,EAAA,CAAAyD,SAAA,iBAA4G;UAC5GzD,EAAA,CAAAC,cAAA,iBAAqD;UAAAD,EAAA,CAAAE,MAAA,4CAAoC;UAE7FF,EAF6F,CAAAG,YAAA,EAAQ,EAC7F,EACG;UAITH,EADF,CAAAC,cAAA,oBAAwD,iBACvB;UAAAD,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAE9CH,EADF,CAAAC,cAAA,cAAwB,iBACI;UAAAD,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAC1CH,EAAA,CAAAC,cAAA,kBAA0E;UACxED,EAAA,CAAA0D,UAAA,KAAAC,4CAAA,qBAAgE;UAEpE3D,EADE,CAAAG,YAAA,EAAS,EACL;UAGFH,EAFJ,CAAAC,cAAA,eAAsB,cACI,iBACM;UAAAD,EAAA,CAAAE,MAAA,kBAAU;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAC9CH,EAAA,CAAAyD,SAAA,iBAAkH;UACpHzD,EAAA,CAAAG,YAAA,EAAM;UAEJH,EADF,CAAAC,cAAA,cAAwB,iBACI;UAAAD,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAC1CH,EAAA,CAAAyD,SAAA,iBAA8G;UAElHzD,EADE,CAAAG,YAAA,EAAM,EACF;UAEJH,EADF,CAAAC,cAAA,cAAwB,iBACE;UAAAD,EAAA,CAAAE,MAAA,qCAA6B;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAC7DH,EAAA,CAAAC,cAAA,kBAA2E;UACzED,EAAA,CAAA0D,UAAA,KAAAE,4CAAA,qBAA8D;UAElE5D,EADE,CAAAG,YAAA,EAAS,EACL;UAEJH,EADF,CAAAC,cAAA,cAAwB,iBACM;UAAAD,EAAA,CAAAE,MAAA,sBAAc;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAEhDH,EADF,CAAAC,cAAA,eAA8B,YACtB;UAAAD,EAAA,CAAAE,MAAA,eAAO;UAAAF,EAAA,CAAAG,YAAA,EAAO;UACpBH,EAAA,CAAAyD,SAAA,iBAAkH;UAEtHzD,EADE,CAAAG,YAAA,EAAM,EACF;UACNH,EAAA,CAAAC,cAAA,eAAuC;UACrCD,EAAA,CAAAyD,SAAA,iBAAqE;UACrEzD,EAAA,CAAAC,cAAA,iBAA2B;UAAAD,EAAA,CAAAE,MAAA,iBAAS;UACtCF,EADsC,CAAAG,YAAA,EAAQ,EACxC;UAEJH,EADF,CAAAC,cAAA,cAAwB,iBACQ;UAAAD,EAAA,CAAAE,MAAA,0BAAkB;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACxDH,EAAA,CAAAyD,SAAA,oBAAsK;UACtKzD,EAAA,CAAAC,cAAA,iBAA6D;UAAAD,EAAA,CAAAE,MAAA,0CAAkC;UAEnGF,EAFmG,CAAAG,YAAA,EAAQ,EACnG,EACG;UAGXH,EAAA,CAAAC,cAAA,kBAAiI;UAAAD,EAAA,CAAAE,MAAA,uBAAe;UAClJF,EADkJ,CAAAG,YAAA,EAAS,EACpJ;UAGPH,EAAA,CAAA0D,UAAA,KAAAG,yCAAA,kBAAuE;UAIzE7D,EAAA,CAAAG,YAAA,EAAM;;;UA1EEH,EAAA,CAAAM,SAAA,GAAkC;UAAlCN,EAAA,CAAAI,UAAA,cAAAkD,GAAA,CAAApC,oBAAA,CAAkC;UA4BLlB,EAAA,CAAAM,SAAA,IAAkB;UAAlBN,EAAA,CAAAI,UAAA,YAAAkD,GAAA,CAAAvC,eAAA,CAAkB;UAgBlBf,EAAA,CAAAM,SAAA,IAAgB;UAAhBN,EAAA,CAAAI,UAAA,YAAAkD,GAAA,CAAAtC,aAAA,CAAgB;UAsB3BhB,EAAA,CAAAM,SAAA,IAAyC;UAAzCN,EAAA,CAAAI,UAAA,aAAAkD,GAAA,CAAApC,oBAAA,CAAA4C,OAAA,CAAyC;UAI3D9D,EAAA,CAAAM,SAAA,GAAmB;UAAnBN,EAAA,CAAAI,UAAA,SAAAkD,GAAA,CAAA3C,aAAA,CAAmB;;;qBD/DfZ,YAAY,EAAAgE,EAAA,CAAAC,OAAA,EAAAD,EAAA,CAAAE,IAAA,EAAEnE,mBAAmB,EAAA4C,EAAA,CAAAwB,aAAA,EAAAxB,EAAA,CAAAyB,cAAA,EAAAzB,EAAA,CAAA0B,uBAAA,EAAA1B,EAAA,CAAA2B,oBAAA,EAAA3B,EAAA,CAAA4B,4BAAA,EAAA5B,EAAA,CAAA6B,0BAAA,EAAA7B,EAAA,CAAA8B,eAAA,EAAA9B,EAAA,CAAA+B,oBAAA,EAAA/B,EAAA,CAAAgC,kBAAA,EAAAhC,EAAA,CAAAiC,eAAA,EAAAjC,EAAA,CAAAkC,aAAA;MAAAC,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
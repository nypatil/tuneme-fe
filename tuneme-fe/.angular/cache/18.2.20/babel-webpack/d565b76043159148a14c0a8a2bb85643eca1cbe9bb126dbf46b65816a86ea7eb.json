{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AppointmentService {\n  constructor() {}\n  getAppointmentCenters() {\n    // In a real application, this would fetch data from an API.\n    // Here, we return a hardcoded list as an Observable.\n    const centers = ['New York', 'London', 'Tokyo', 'Paris', 'Sydney'];\n    return of(centers);\n  }\n  static {\n    this.ɵfac = function AppointmentService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AppointmentService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AppointmentService,\n      factory: AppointmentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["of","AppointmentService","constructor","getAppointmentCenters","centers","factory","ɵfac","providedIn"],"sources":["C:\\Users\\np59585\\gemini-angular-app\\Sample1\\src\\app\\services\\appointment.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { of, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentService {\n\n  constructor() { }\n\n  getAppointmentCenters(): Observable<string[]> {\n    // In a real application, this would fetch data from an API.\n    // Here, we return a hardcoded list as an Observable.\n    const centers = ['New York', 'London', 'Tokyo', 'Paris', 'Sydney'];\n    return of(centers);\n  }\n}\n"],"mappings":"AACA,SAASA,EAAE,QAAoB,MAAM;;AAKrC,OAAM,MAAOC,kBAAkB;EAE7BC,YAAA,GAAgB;EAEhBC,qBAAqBA,CAAA;IACnB;IACA;IACA,MAAMC,OAAO,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC;IAClE,OAAOJ,EAAE,CAACI,OAAO,CAAC;EACpB;;;uCATWH,kBAAkB;IAAA;EAAA;;;aAAlBA,kBAAkB;MAAAI,OAAA,EAAlBJ,kBAAkB,CAAAK,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
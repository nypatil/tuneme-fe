{"ast":null,"code":"import { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/appointment.service\";\nimport * as i3 from \"@angular/common\";\nfunction AppointmentReminderComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Appointment Name is required and must be at least 3 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppointmentReminderComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const center_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", center_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(center_r1);\n  }\n}\nfunction AppointmentReminderComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Appointment Center is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppointmentReminderComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" A valid future date is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppointmentReminderComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Appointment Time is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppointmentReminderComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"h3\");\n    i0.ɵɵtext(2, \"Submitted Data:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"pre\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.submittedJson);\n  }\n}\nexport class AppointmentReminderComponent {\n  constructor(fb, appointmentService) {\n    this.fb = fb;\n    this.appointmentService = appointmentService;\n    this.submittedJson = null;\n    this.minDate = this.getMinDate();\n  }\n  ngOnInit() {\n    this.initializeForm();\n    this.loadAppointmentCenters();\n  }\n  initializeForm() {\n    this.appointmentForm = this.fb.group({\n      appointmentName: ['', [Validators.required, Validators.minLength(3)]],\n      appointmentCenter: ['', Validators.required],\n      appointmentDate: ['', Validators.required],\n      appointmentTime: ['', Validators.required]\n    });\n  }\n  loadAppointmentCenters() {\n    this.centerList$ = this.appointmentService.getAppointmentCenters();\n  }\n  getMinDate() {\n    const today = new Date();\n    return today.toISOString().split('T')[0];\n  }\n  onSubmit() {\n    if (this.appointmentForm.valid) {\n      this.processFormSubmission(this.appointmentForm.value);\n    } else {\n      this.appointmentForm.markAllAsTouched();\n    }\n  }\n  processFormSubmission(formData) {\n    this.submittedJson = JSON.stringify(formData, null, 2);\n    console.log('Form Submitted:', formData);\n    // In a real app, you would send this data to a backend service.\n  }\n  static {\n    this.ɵfac = function AppointmentReminderComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AppointmentReminderComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AppointmentService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppointmentReminderComponent,\n      selectors: [[\"app-appointment-reminder\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 39,\n      vars: 11,\n      consts: [[1, \"container\"], [\"aria-labelledby\", \"form-title\", 3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"appointmentName\"], [\"type\", \"text\", \"id\", \"appointmentName\", \"formControlName\", \"appointmentName\", \"aria-describedby\", \"name-helper\", 1, \"form-control\"], [\"id\", \"name-helper\", 1, \"form-text\", \"text-muted\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"appointmentCenter\"], [\"id\", \"appointmentCenter\", \"formControlName\", \"appointmentCenter\", \"aria-describedby\", \"center-helper\", 1, \"form-control\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"center-helper\", 1, \"form-text\", \"text-muted\"], [\"for\", \"appointmentDate\"], [\"type\", \"date\", \"id\", \"appointmentDate\", \"formControlName\", \"appointmentDate\", \"aria-describedby\", \"date-helper\", 1, \"form-control\", 3, \"min\"], [\"id\", \"date-helper\", 1, \"form-text\", \"text-muted\"], [\"for\", \"appointmentTime\"], [\"type\", \"time\", \"id\", \"appointmentTime\", \"formControlName\", \"appointmentTime\", \"aria-describedby\", \"time-helper\", 1, \"form-control\"], [\"id\", \"time-helper\", 1, \"form-text\", \"text-muted\"], [\"type\", \"submit\", \"title\", \"Click to save the appointment details\", 3, \"disabled\"], [\"class\", \"result-container\", \"aria-live\", \"polite\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [3, \"value\"], [\"aria-live\", \"polite\", 1, \"result-container\"]],\n      template: function AppointmentReminderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Appointment Reminder\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function AppointmentReminderComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Appointment Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementStart(8, \"small\", 5);\n          i0.ɵɵtext(9, \"Please enter the purpose of the appointment (e.g., \\\"Dentist Check-up\\\").\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(10, AppointmentReminderComponent_div_10_Template, 2, 0, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 2)(12, \"label\", 7);\n          i0.ɵɵtext(13, \"Appointment Center\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"select\", 8)(15, \"option\", 9);\n          i0.ɵɵtext(16, \"Select a Center\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(17, AppointmentReminderComponent_option_17_Template, 2, 2, \"option\", 10);\n          i0.ɵɵpipe(18, \"async\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"small\", 11);\n          i0.ɵɵtext(20, \"Select the city where the appointment will take place.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(21, AppointmentReminderComponent_div_21_Template, 2, 0, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"div\", 2)(23, \"label\", 12);\n          i0.ɵɵtext(24, \"Select Appointment Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(25, \"input\", 13);\n          i0.ɵɵelementStart(26, \"small\", 14);\n          i0.ɵɵtext(27, \"You cannot select a past date.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(28, AppointmentReminderComponent_div_28_Template, 2, 0, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"div\", 2)(30, \"label\", 15);\n          i0.ɵɵtext(31, \"Select Time (24-hour format)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(32, \"input\", 16);\n          i0.ɵɵelementStart(33, \"small\", 17);\n          i0.ɵɵtext(34, \"Use the 24-hour clock (e.g., 14:30 for 2:30 PM).\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(35, AppointmentReminderComponent_div_35_Template, 2, 0, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"button\", 18);\n          i0.ɵɵtext(37, \"Submit\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(38, AppointmentReminderComponent_div_38_Template, 5, 1, \"div\", 19);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_3_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.appointmentForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.appointmentForm.get(\"appointmentName\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.appointmentForm.get(\"appointmentName\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.appointmentForm.get(\"appointmentName\")) == null ? null : tmp_1_0.touched)));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(18, 9, ctx.centerList$));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.appointmentForm.get(\"appointmentCenter\")) == null ? null : tmp_3_0.invalid) && (((tmp_3_0 = ctx.appointmentForm.get(\"appointmentCenter\")) == null ? null : tmp_3_0.dirty) || ((tmp_3_0 = ctx.appointmentForm.get(\"appointmentCenter\")) == null ? null : tmp_3_0.touched)));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"min\", ctx.minDate);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.appointmentForm.get(\"appointmentDate\")) == null ? null : tmp_5_0.invalid) && (((tmp_5_0 = ctx.appointmentForm.get(\"appointmentDate\")) == null ? null : tmp_5_0.dirty) || ((tmp_5_0 = ctx.appointmentForm.get(\"appointmentDate\")) == null ? null : tmp_5_0.touched)));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.appointmentForm.get(\"appointmentTime\")) == null ? null : tmp_6_0.invalid) && (((tmp_6_0 = ctx.appointmentForm.get(\"appointmentTime\")) == null ? null : tmp_6_0.dirty) || ((tmp_6_0 = ctx.appointmentForm.get(\"appointmentTime\")) == null ? null : tmp_6_0.touched)));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.appointmentForm.invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.submittedJson);\n        }\n      },\n      dependencies: [CommonModule, i3.NgForOf, i3.NgIf, i3.AsyncPipe, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".container[_ngcontent-%COMP%] {\\n  max-width: 600px;\\n  margin: 2rem auto;\\n  padding: 2rem;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 1.5rem;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 1.25rem;\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 0.5rem;\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n}\\n\\n.form-text[_ngcontent-%COMP%] {\\n  color: #6c757d;\\n  margin-top: 0.25rem;\\n}\\n\\n.alert-danger[_ngcontent-%COMP%] {\\n  color: #721c24;\\n  background-color: #f8d7da;\\n  border-color: #f5c6cb;\\n  padding: 0.75rem 1.25rem;\\n  margin-top: 0.5rem;\\n  border: 1px solid transparent;\\n  border-radius: 4px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 0.75rem;\\n  font-weight: bold;\\n  color: #fff;\\n  background-color: #ed8b00;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  transition: background-color 0.2s;\\n}\\n\\nbutton[_ngcontent-%COMP%]:disabled {\\n  background-color: #cccccc;\\n  cursor: not-allowed;\\n}\\n\\nbutton[_ngcontent-%COMP%]:not(:disabled):hover {\\n  background-color: #d67c00;\\n}\\n\\n.result-container[_ngcontent-%COMP%] {\\n  margin-top: 2rem;\\n  padding: 1rem;\\n  background-color: #f8f9fa;\\n  border: 1px solid #dee2e6;\\n  border-radius: 4px;\\n}\\n\\npre[_ngcontent-%COMP%] {\\n  background-color: #e9ecef;\\n  padding: 1rem;\\n  border-radius: 4px;\\n  white-space: pre-wrap;\\n  word-wrap: break-word;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYXBwb2ludG1lbnQtcmVtaW5kZXIvYXBwb2ludG1lbnQtcmVtaW5kZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixxQ0FBcUM7QUFDdkM7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGVBQWU7RUFDZixzQkFBc0I7RUFDdEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsY0FBYztFQUNkLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCx5QkFBeUI7RUFDekIscUJBQXFCO0VBQ3JCLHdCQUF3QjtFQUN4QixrQkFBa0I7RUFDbEIsNkJBQTZCO0VBQzdCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsaUNBQWlDO0FBQ25DOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2IseUJBQXlCO0VBQ3pCLHlCQUF5QjtFQUN6QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIscUJBQXFCO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogNjAwcHg7XG4gIG1hcmdpbjogMnJlbSBhdXRvO1xuICBwYWRkaW5nOiAycmVtO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsMCwwLDAuMSk7XG59XG5cbmgyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XG59XG5cbi5mb3JtLWdyb3VwIHtcbiAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTtcbn1cblxuLmZvcm0tY29udHJvbCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbn1cblxuLmZvcm0tdGV4dCB7XG4gIGNvbG9yOiAjNmM3NTdkO1xuICBtYXJnaW4tdG9wOiAwLjI1cmVtO1xufVxuXG4uYWxlcnQtZGFuZ2VyIHtcbiAgY29sb3I6ICM3MjFjMjQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGQ3ZGE7XG4gIGJvcmRlci1jb2xvcjogI2Y1YzZjYjtcbiAgcGFkZGluZzogMC43NXJlbSAxLjI1cmVtO1xuICBtYXJnaW4tdG9wOiAwLjVyZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG5cbmJ1dHRvbiB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwLjc1cmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlZDhiMDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycztcbn1cblxuYnV0dG9uOmRpc2FibGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NjY2NjYztcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbn1cblxuYnV0dG9uOm5vdCg6ZGlzYWJsZWQpOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Q2N2MwMDtcbn1cblxuLnJlc3VsdC1jb250YWluZXIge1xuICBtYXJnaW4tdG9wOiAycmVtO1xuICBwYWRkaW5nOiAxcmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZGVlMmU2O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG5cbnByZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWY7XG4gIHBhZGRpbmc6IDFyZW07XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","ReactiveFormsModule","CommonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","center_r1","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","submittedJson","AppointmentReminderComponent","constructor","fb","appointmentService","minDate","getMinDate","ngOnInit","initializeForm","loadAppointmentCenters","appointmentForm","group","appointmentName","required","minLength","appointmentCenter","appointmentDate","appointmentTime","centerList$","getAppointmentCenters","today","Date","toISOString","split","onSubmit","valid","processFormSubmission","value","markAllAsTouched","formData","JSON","stringify","console","log","ɵɵdirectiveInject","i1","FormBuilder","i2","AppointmentService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppointmentReminderComponent_Template","rf","ctx","ɵɵlistener","AppointmentReminderComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","AppointmentReminderComponent_div_10_Template","AppointmentReminderComponent_option_17_Template","AppointmentReminderComponent_div_21_Template","AppointmentReminderComponent_div_28_Template","AppointmentReminderComponent_div_35_Template","AppointmentReminderComponent_div_38_Template","tmp_1_0","get","invalid","dirty","touched","ɵɵpipeBind1","tmp_3_0","tmp_5_0","tmp_6_0","i3","NgForOf","NgIf","AsyncPipe","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["C:\\Users\\np59585\\gemini-angular-app\\Sample1\\src\\app\\pages\\appointment-reminder\\appointment-reminder.component.ts","C:\\Users\\np59585\\gemini-angular-app\\Sample1\\src\\app\\pages\\appointment-reminder\\appointment-reminder.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport { AppointmentService } from '../../services/appointment.service';\n\n@Component({\n  selector: 'app-appointment-reminder',\n  templateUrl: './appointment-reminder.component.html',\n  styleUrls: ['./appointment-reminder.component.css'],\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule]\n})\nexport class AppointmentReminderComponent implements OnInit {\n  appointmentForm!: FormGroup;\n  centerList$!: Observable<string[]>;\n  minDate: string;\n  submittedJson: string | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private appointmentService: AppointmentService\n  ) {\n    this.minDate = this.getMinDate();\n  }\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.loadAppointmentCenters();\n  }\n\n  private initializeForm(): void {\n    this.appointmentForm = this.fb.group({\n      appointmentName: ['', [Validators.required, Validators.minLength(3)]],\n      appointmentCenter: ['', Validators.required],\n      appointmentDate: ['', Validators.required],\n      appointmentTime: ['', Validators.required]\n    });\n  }\n\n  private loadAppointmentCenters(): void {\n    this.centerList$ = this.appointmentService.getAppointmentCenters();\n  }\n\n  private getMinDate(): string {\n    const today = new Date();\n    return today.toISOString().split('T')[0];\n  }\n\n  onSubmit(): void {\n    if (this.appointmentForm.valid) {\n      this.processFormSubmission(this.appointmentForm.value);\n    } else {\n      this.appointmentForm.markAllAsTouched();\n    }\n  }\n\n  private processFormSubmission(formData: any): void {\n    this.submittedJson = JSON.stringify(formData, null, 2);\n    console.log('Form Submitted:', formData);\n    // In a real app, you would send this data to a backend service.\n  }\n}","<div class=\"container\">\n  <h2>Appointment Reminder</h2>\n  <form [formGroup]=\"appointmentForm\" (ngSubmit)=\"onSubmit()\" aria-labelledby=\"form-title\">\n    <!-- Appointment Name -->\n    <div class=\"form-group\">\n      <label for=\"appointmentName\">Appointment Name</label>\n      <input type=\"text\" id=\"appointmentName\" formControlName=\"appointmentName\" class=\"form-control\" aria-describedby=\"name-helper\">\n      <small id=\"name-helper\" class=\"form-text text-muted\">Please enter the purpose of the appointment (e.g., \"Dentist Check-up\").</small>\n      <div *ngIf=\"appointmentForm.get('appointmentName')?.invalid && (appointmentForm.get('appointmentName')?.dirty || appointmentForm.get('appointmentName')?.touched)\" class=\"alert alert-danger\">\n        Appointment Name is required and must be at least 3 characters long.\n      </div>\n    </div>\n\n    <!-- Appointment Center -->\n    <div class=\"form-group\">\n      <label for=\"appointmentCenter\">Appointment Center</label>\n      <select id=\"appointmentCenter\" formControlName=\"appointmentCenter\" class=\"form-control\" aria-describedby=\"center-helper\">\n        <option value=\"\" disabled>Select a Center</option>\n        <option *ngFor=\"let center of centerList$ | async\" [value]=\"center\">{{ center }}</option>\n      </select>\n      <small id=\"center-helper\" class=\"form-text text-muted\">Select the city where the appointment will take place.</small>\n      <div *ngIf=\"appointmentForm.get('appointmentCenter')?.invalid && (appointmentForm.get('appointmentCenter')?.dirty || appointmentForm.get('appointmentCenter')?.touched)\" class=\"alert alert-danger\">\n        Appointment Center is required.\n      </div>\n    </div>\n\n    <!-- Appointment Date -->\n    <div class=\"form-group\">\n      <label for=\"appointmentDate\">Select Appointment Date</label>\n      <input type=\"date\" id=\"appointmentDate\" formControlName=\"appointmentDate\" [min]=\"minDate\" class=\"form-control\" aria-describedby=\"date-helper\">\n      <small id=\"date-helper\" class=\"form-text text-muted\">You cannot select a past date.</small>\n      <div *ngIf=\"appointmentForm.get('appointmentDate')?.invalid && (appointmentForm.get('appointmentDate')?.dirty || appointmentForm.get('appointmentDate')?.touched)\" class=\"alert alert-danger\">\n        A valid future date is required.\n      </div>\n    </div>\n\n    <!-- Appointment Time -->\n    <div class=\"form-group\">\n      <label for=\"appointmentTime\">Select Time (24-hour format)</label>\n      <input type=\"time\" id=\"appointmentTime\" formControlName=\"appointmentTime\" class=\"form-control\" aria-describedby=\"time-helper\">\n      <small id=\"time-helper\" class=\"form-text text-muted\">Use the 24-hour clock (e.g., 14:30 for 2:30 PM).</small>\n      <div *ngIf=\"appointmentForm.get('appointmentTime')?.invalid && (appointmentForm.get('appointmentTime')?.dirty || appointmentForm.get('appointmentTime')?.touched)\" class=\"alert alert-danger\">\n        Appointment Time is required.\n      </div>\n    </div>\n\n    <!-- Submit Button -->\n    <button type=\"submit\" [disabled]=\"appointmentForm.invalid\" title=\"Click to save the appointment details\">Submit</button>\n  </form>\n\n  <!-- Display JSON Result -->\n  <div *ngIf=\"submittedJson\" class=\"result-container\" aria-live=\"polite\">\n    <h3>Submitted Data:</h3>\n    <pre>{{ submittedJson }}</pre>\n  </div>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
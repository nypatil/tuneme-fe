{"ast":null,"code":"import { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction AppointmentReminderComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Appointment Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppointmentReminderComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const center_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", center_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(center_r1);\n  }\n}\nfunction AppointmentReminderComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Appointment Center is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppointmentReminderComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Appointment Date is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppointmentReminderComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Appointment Time is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppointmentReminderComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"h3\");\n    i0.ɵɵtext(2, \"Submitted Data:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"pre\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.submittedJson);\n  }\n}\nexport class AppointmentReminderComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.centerList = ['New York', 'London', 'Tokyo', 'Paris', 'Sydney'];\n    this.submittedJson = null;\n    // Set the minimum date for the date picker to today\n    const today = new Date();\n    this.minDate = today.toISOString().split('T')[0];\n  }\n  ngOnInit() {\n    this.appointmentForm = this.fb.group({\n      appointmentName: ['', Validators.required],\n      appointmentCenter: ['', Validators.required],\n      appointmentDate: ['', Validators.required],\n      appointmentTime: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.appointmentForm.valid) {\n      // Prepare the JSON object from the form values\n      const formData = this.appointmentForm.value;\n      this.submittedJson = JSON.stringify(formData, null, 2);\n      console.log('Form Submitted:', formData);\n    } else {\n      // Mark all fields as touched to trigger validation messages\n      this.appointmentForm.markAllAsTouched();\n    }\n  }\n  static {\n    this.ɵfac = function AppointmentReminderComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AppointmentReminderComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppointmentReminderComponent,\n      selectors: [[\"app-appointment-reminder\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 30,\n      vars: 9,\n      consts: [[1, \"container\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"appointmentName\"], [\"type\", \"text\", \"id\", \"appointmentName\", \"formControlName\", \"appointmentName\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"appointmentCenter\"], [\"id\", \"appointmentCenter\", \"formControlName\", \"appointmentCenter\", 1, \"form-control\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"appointmentDate\"], [\"type\", \"date\", \"id\", \"appointmentDate\", \"formControlName\", \"appointmentDate\", 1, \"form-control\", 3, \"min\"], [\"for\", \"appointmentTime\"], [\"type\", \"time\", \"id\", \"appointmentTime\", \"formControlName\", \"appointmentTime\", 1, \"form-control\"], [\"type\", \"submit\", 3, \"disabled\"], [\"class\", \"result-container\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [3, \"value\"], [1, \"result-container\"]],\n      template: function AppointmentReminderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Appointment Reminder\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function AppointmentReminderComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Appointment Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵtemplate(8, AppointmentReminderComponent_div_8_Template, 2, 0, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n          i0.ɵɵtext(11, \"Appointment Center\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"select\", 7)(13, \"option\", 8);\n          i0.ɵɵtext(14, \"Select a Center\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(15, AppointmentReminderComponent_option_15_Template, 2, 2, \"option\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(16, AppointmentReminderComponent_div_16_Template, 2, 0, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\", 2)(18, \"label\", 10);\n          i0.ɵɵtext(19, \"Select Appointment Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"input\", 11);\n          i0.ɵɵtemplate(21, AppointmentReminderComponent_div_21_Template, 2, 0, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"div\", 2)(23, \"label\", 12);\n          i0.ɵɵtext(24, \"Select Time\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(25, \"input\", 13);\n          i0.ɵɵtemplate(26, AppointmentReminderComponent_div_26_Template, 2, 0, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"button\", 14);\n          i0.ɵɵtext(28, \"Submit\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(29, AppointmentReminderComponent_div_29_Template, 5, 1, \"div\", 15);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_3_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.appointmentForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.appointmentForm.get(\"appointmentName\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.appointmentForm.get(\"appointmentName\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.appointmentForm.get(\"appointmentName\")) == null ? null : tmp_1_0.touched)));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngForOf\", ctx.centerList);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.appointmentForm.get(\"appointmentCenter\")) == null ? null : tmp_3_0.invalid) && (((tmp_3_0 = ctx.appointmentForm.get(\"appointmentCenter\")) == null ? null : tmp_3_0.dirty) || ((tmp_3_0 = ctx.appointmentForm.get(\"appointmentCenter\")) == null ? null : tmp_3_0.touched)));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"min\", ctx.minDate);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.appointmentForm.get(\"appointmentDate\")) == null ? null : tmp_5_0.invalid) && (((tmp_5_0 = ctx.appointmentForm.get(\"appointmentDate\")) == null ? null : tmp_5_0.dirty) || ((tmp_5_0 = ctx.appointmentForm.get(\"appointmentDate\")) == null ? null : tmp_5_0.touched)));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.appointmentForm.get(\"appointmentTime\")) == null ? null : tmp_6_0.invalid) && (((tmp_6_0 = ctx.appointmentForm.get(\"appointmentTime\")) == null ? null : tmp_6_0.dirty) || ((tmp_6_0 = ctx.appointmentForm.get(\"appointmentTime\")) == null ? null : tmp_6_0.touched)));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.appointmentForm.invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.submittedJson);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".container[_ngcontent-%COMP%] {\\n  max-width: 600px;\\n  margin: 2rem auto;\\n  padding: 2rem;\\n  border: 1px solid #ccc;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 1.5rem;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 1rem;\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 0.5rem;\\n  font-size: 1rem;\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n}\\n\\n.alert-danger[_ngcontent-%COMP%] {\\n  color: #721c24;\\n  background-color: #f8d7da;\\n  border-color: #f5c6cb;\\n  padding: 0.5rem;\\n  margin-top: 0.25rem;\\n  border: 1px solid transparent;\\n  border-radius: 4px;\\n  font-size: 0.875rem;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 0.75rem;\\n  font-size: 1rem;\\n  color: #fff;\\n  background-color: #007bff;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  transition: background-color 0.2s;\\n}\\n\\nbutton[_ngcontent-%COMP%]:disabled {\\n  background-color: #cccccc;\\n  cursor: not-allowed;\\n}\\n\\nbutton[_ngcontent-%COMP%]:not(:disabled):hover {\\n  background-color: #0056b3;\\n}\\n\\n.result-container[_ngcontent-%COMP%] {\\n  margin-top: 2rem;\\n  padding: 1rem;\\n  background-color: #f8f9fa;\\n  border: 1px solid #dee2e6;\\n  border-radius: 4px;\\n}\\n\\npre[_ngcontent-%COMP%] {\\n  background-color: #e9ecef;\\n  padding: 1rem;\\n  border-radius: 4px;\\n  white-space: pre-wrap;\\n  word-wrap: break-word;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYXBwb2ludG1lbnQtcmVtaW5kZXIvYXBwb2ludG1lbnQtcmVtaW5kZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIscUNBQXFDO0FBQ3ZDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxlQUFlO0VBQ2YsZUFBZTtFQUNmLHNCQUFzQjtFQUN0QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QseUJBQXlCO0VBQ3pCLHFCQUFxQjtFQUNyQixlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLDZCQUE2QjtFQUM3QixrQkFBa0I7RUFDbEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsV0FBVztFQUNYLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYix5QkFBeUI7RUFDekIseUJBQXlCO0VBQ3pCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixxQkFBcUI7QUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA2MDBweDtcbiAgbWFyZ2luOiAycmVtIGF1dG87XG4gIHBhZGRpbmc6IDJyZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwwLDAsMC4xKTtcbn1cblxuaDIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcbn1cblxuLmZvcm0tZ3JvdXAge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG4uZm9ybS1jb250cm9sIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDAuNXJlbTtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG5cbi5hbGVydC1kYW5nZXIge1xuICBjb2xvcjogIzcyMWMyNDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZDdkYTtcbiAgYm9yZGVyLWNvbG9yOiAjZjVjNmNiO1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIG1hcmdpbi10b3A6IDAuMjVyZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG59XG5cbmJ1dHRvbiB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwLjc1cmVtO1xuICBmb250LXNpemU6IDFyZW07XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XG59XG5cbmJ1dHRvbjpkaXNhYmxlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjY2NjY2M7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XG59XG5cbmJ1dHRvbjpub3QoOmRpc2FibGVkKTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDU2YjM7XG59XG5cbi5yZXN1bHQtY29udGFpbmVyIHtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbiAgcGFkZGluZzogMXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RlZTJlNjtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xufVxuXG5wcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTllY2VmO1xuICBwYWRkaW5nOiAxcmVtO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","ReactiveFormsModule","CommonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","center_r1","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","submittedJson","AppointmentReminderComponent","constructor","fb","centerList","today","Date","minDate","toISOString","split","ngOnInit","appointmentForm","group","appointmentName","required","appointmentCenter","appointmentDate","appointmentTime","onSubmit","valid","formData","value","JSON","stringify","console","log","markAllAsTouched","ɵɵdirectiveInject","i1","FormBuilder","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppointmentReminderComponent_Template","rf","ctx","ɵɵlistener","AppointmentReminderComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","AppointmentReminderComponent_div_8_Template","AppointmentReminderComponent_option_15_Template","AppointmentReminderComponent_div_16_Template","AppointmentReminderComponent_div_21_Template","AppointmentReminderComponent_div_26_Template","AppointmentReminderComponent_div_29_Template","tmp_1_0","get","invalid","dirty","touched","tmp_3_0","tmp_5_0","tmp_6_0","i2","NgForOf","NgIf","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["C:\\Users\\np59585\\gemini-angular-app\\Sample1\\src\\app\\pages\\appointment-reminder\\appointment-reminder.component.ts","C:\\Users\\np59585\\gemini-angular-app\\Sample1\\src\\app\\pages\\appointment-reminder\\appointment-reminder.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-appointment-reminder',\n  templateUrl: './appointment-reminder.component.html',\n  styleUrls: ['./appointment-reminder.component.css'],\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule]\n})\nexport class AppointmentReminderComponent implements OnInit {\n  appointmentForm!: FormGroup;\n  centerList: string[] = ['New York', 'London', 'Tokyo', 'Paris', 'Sydney'];\n  minDate: string;\n  submittedJson: string | null = null;\n\n  constructor(private fb: FormBuilder) {\n    // Set the minimum date for the date picker to today\n    const today = new Date();\n    this.minDate = today.toISOString().split('T')[0];\n  }\n\n  ngOnInit(): void {\n    this.appointmentForm = this.fb.group({\n      appointmentName: ['', Validators.required],\n      appointmentCenter: ['', Validators.required],\n      appointmentDate: ['', Validators.required],\n      appointmentTime: ['', Validators.required]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.appointmentForm.valid) {\n      // Prepare the JSON object from the form values\n      const formData = this.appointmentForm.value;\n      this.submittedJson = JSON.stringify(formData, null, 2);\n      console.log('Form Submitted:', formData);\n    } else {\n      // Mark all fields as touched to trigger validation messages\n      this.appointmentForm.markAllAsTouched();\n    }\n  }\n}\n","<div class=\"container\">\n  <h2>Appointment Reminder</h2>\n  <form [formGroup]=\"appointmentForm\" (ngSubmit)=\"onSubmit()\">\n    <!-- Appointment Name -->\n    <div class=\"form-group\">\n      <label for=\"appointmentName\">Appointment Name</label>\n      <input type=\"text\" id=\"appointmentName\" formControlName=\"appointmentName\" class=\"form-control\">\n      <div *ngIf=\"appointmentForm.get('appointmentName')?.invalid && (appointmentForm.get('appointmentName')?.dirty || appointmentForm.get('appointmentName')?.touched)\" class=\"alert alert-danger\">\n        Appointment Name is required.\n      </div>\n    </div>\n\n    <!-- Appointment Center -->\n    <div class=\"form-group\">\n      <label for=\"appointmentCenter\">Appointment Center</label>\n      <select id=\"appointmentCenter\" formControlName=\"appointmentCenter\" class=\"form-control\">\n        <option value=\"\" disabled>Select a Center</option>\n        <option *ngFor=\"let center of centerList\" [value]=\"center\">{{ center }}</option>\n      </select>\n      <div *ngIf=\"appointmentForm.get('appointmentCenter')?.invalid && (appointmentForm.get('appointmentCenter')?.dirty || appointmentForm.get('appointmentCenter')?.touched)\" class=\"alert alert-danger\">\n        Appointment Center is required.\n      </div>\n    </div>\n\n    <!-- Appointment Date -->\n    <div class=\"form-group\">\n      <label for=\"appointmentDate\">Select Appointment Date</label>\n      <input type=\"date\" id=\"appointmentDate\" formControlName=\"appointmentDate\" [min]=\"minDate\" class=\"form-control\">\n      <div *ngIf=\"appointmentForm.get('appointmentDate')?.invalid && (appointmentForm.get('appointmentDate')?.dirty || appointmentForm.get('appointmentDate')?.touched)\" class=\"alert alert-danger\">\n        Appointment Date is required.\n      </div>\n    </div>\n\n    <!-- Appointment Time -->\n    <div class=\"form-group\">\n      <label for=\"appointmentTime\">Select Time</label>\n      <input type=\"time\" id=\"appointmentTime\" formControlName=\"appointmentTime\" class=\"form-control\">\n      <div *ngIf=\"appointmentForm.get('appointmentTime')?.invalid && (appointmentForm.get('appointmentTime')?.dirty || appointmentForm.get('appointmentTime')?.touched)\" class=\"alert alert-danger\">\n        Appointment Time is required.\n      </div>\n    </div>\n\n    <!-- Submit Button -->\n    <button type=\"submit\" [disabled]=\"appointmentForm.invalid\">Submit</button>\n  </form>\n\n  <!-- Display JSON Result -->\n  <div *ngIf=\"submittedJson\" class=\"result-container\">\n    <h3>Submitted Data:</h3>\n    <pre>{{ submittedJson }}</pre>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/np59585/gemini-angular-app/Sample1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = () => [];\nfunction SliderComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelement(1, \"img\", 8);\n    i0.ɵɵelementStart(2, \"div\", 9)(3, \"h3\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const slide_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", slide_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(slide_r1.text1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(slide_r1.text2);\n  }\n}\nfunction SliderComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵlistener(\"click\", function SliderComponent_span_8_Template_span_click_0_listener() {\n      const i_r3 = i0.ɵɵrestoreView(_r2).index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.goToSlide(i_r3));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", i_r3 === ctx_r3.currentDotIndex);\n  }\n}\nexport let SliderComponent = /*#__PURE__*/(() => {\n  class SliderComponent {\n    constructor() {\n      this.slides = [];\n      this.displayedSlides = []; // For infinite scrolling\n      this.currentIndex = 0;\n      this.slidesPerPage = 3; // Default for desktop\n      this.animationDuration = 1500; // 1.5 seconds\n      this.autoplayInterval = 5000; // 5 seconds\n    }\n    onResize(event) {\n      this.updateSlidesPerPage();\n    }\n    ngOnInit() {\n      this.updateSlidesPerPage(); // Set initial slidesPerPage\n      this.loadSlides().then(() => {\n        this.setupInfiniteScroll();\n        this.startAutoplay();\n      });\n    }\n    ngOnDestroy() {\n      this.stopAutoplay();\n    }\n    loadSlides() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const response = yield fetch('assets/slider-content.json');\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          _this.slides = yield response.json();\n        } catch (error) {\n          console.error('Failed to load slider content:', error);\n        }\n      })();\n    }\n    setupInfiniteScroll() {\n      if (this.slides.length > 0) {\n        // Duplicate slides for infinite scrolling effect\n        this.displayedSlides = [...this.slides, ...this.slides, ...this.slides];\n        // Start in the middle set of duplicated slides\n        this.currentIndex = this.slides.length;\n      }\n    }\n    startAutoplay() {\n      this.stopAutoplay(); // Clear any existing timer\n      this.autoplayTimer = setInterval(() => {\n        this.nextSlide();\n      }, this.autoplayInterval);\n    }\n    stopAutoplay() {\n      if (this.autoplayTimer) {\n        clearInterval(this.autoplayTimer);\n        this.autoplayTimer = null;\n      }\n    }\n    nextSlide() {\n      this.currentIndex += this.slidesPerPage;\n      if (this.currentIndex >= this.slides.length * 2) {\n        // If we are in the last duplicated set, jump back to the first duplicated set\n        setTimeout(() => {\n          this.currentIndex = this.slides.length;\n          // Disable transition for instant jump\n          const sliderWrapper = document.querySelector('.slider-wrapper');\n          if (sliderWrapper) {\n            sliderWrapper.style.transition = 'none';\n          }\n        }, this.animationDuration);\n        setTimeout(() => {\n          // Re-enable transition after jump\n          const sliderWrapper = document.querySelector('.slider-wrapper');\n          if (sliderWrapper) {\n            sliderWrapper.style.transition = `transform ${this.animationDuration / 1000}s ease-in-out`;\n          }\n        }, this.animationDuration + 50);\n      }\n    }\n    prevSlide() {\n      this.currentIndex -= this.slidesPerPage;\n      if (this.currentIndex < this.slides.length) {\n        // If we are in the first duplicated set, jump back to the last duplicated set\n        setTimeout(() => {\n          this.currentIndex = this.slides.length * 2 - this.slidesPerPage;\n          // Disable transition for instant jump\n          const sliderWrapper = document.querySelector('.slider-wrapper');\n          if (sliderWrapper) {\n            sliderWrapper.style.transition = 'none';\n          }\n        }, this.animationDuration);\n        setTimeout(() => {\n          // Re-enable transition after jump\n          const sliderWrapper = document.querySelector('.slider-wrapper');\n          if (sliderWrapper) {\n            sliderWrapper.style.transition = `transform ${this.animationDuration / 1000}s ease-in-out`;\n          }\n        }, this.animationDuration + 50);\n      }\n    }\n    goToSlide(dotIndex) {\n      this.currentIndex = this.slides.length + dotIndex * this.slidesPerPage;\n    }\n    get totalPages() {\n      return Math.ceil(this.slides.length / this.slidesPerPage);\n    }\n    get currentDotIndex() {\n      return Math.floor(this.currentIndex % this.slides.length / this.slidesPerPage);\n    }\n    onMouseEnter() {\n      this.stopAutoplay();\n    }\n    onMouseLeave() {\n      this.startAutoplay();\n    }\n    onFocusIn() {\n      this.stopAutoplay();\n    }\n    onFocusOut() {\n      this.startAutoplay();\n    }\n    // Method to update slidesPerPage based on screen size (will be called from host listener)\n    updateSlidesPerPage() {\n      if (window.innerWidth <= 768) {\n        // Mobile\n        this.slidesPerPage = 1;\n      } else if (window.innerWidth <= 1024) {\n        // Tablet\n        this.slidesPerPage = 2;\n      } else {\n        // Desktop\n        this.slidesPerPage = 3;\n      }\n    }\n    static {\n      this.ɵfac = function SliderComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || SliderComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: SliderComponent,\n        selectors: [[\"app-slider\"]],\n        hostBindings: function SliderComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"resize\", function SliderComponent_resize_HostBindingHandler($event) {\n              return ctx.onResize($event);\n            }, false, i0.ɵɵresolveWindow);\n          }\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 9,\n        vars: 5,\n        consts: [[\"tabindex\", \"0\", 1, \"slider-container\", 3, \"mouseenter\", \"mouseleave\", \"focusin\", \"focusout\"], [1, \"slider-wrapper\"], [\"class\", \"slide\", 4, \"ngFor\", \"ngForOf\"], [1, \"prev-button\", 3, \"click\"], [1, \"next-button\", 3, \"click\"], [1, \"slider-dots\"], [3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"slide\"], [\"alt\", \"Slide Image\", 1, \"slide-image\", 3, \"src\"], [1, \"slide-text\"], [3, \"click\"]],\n        template: function SliderComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵlistener(\"mouseenter\", function SliderComponent_Template_div_mouseenter_0_listener() {\n              return ctx.onMouseEnter();\n            })(\"mouseleave\", function SliderComponent_Template_div_mouseleave_0_listener() {\n              return ctx.onMouseLeave();\n            })(\"focusin\", function SliderComponent_Template_div_focusin_0_listener() {\n              return ctx.onFocusIn();\n            })(\"focusout\", function SliderComponent_Template_div_focusout_0_listener() {\n              return ctx.onFocusOut();\n            });\n            i0.ɵɵelementStart(1, \"div\", 1);\n            i0.ɵɵtemplate(2, SliderComponent_div_2_Template, 7, 3, \"div\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"button\", 3);\n            i0.ɵɵlistener(\"click\", function SliderComponent_Template_button_click_3_listener() {\n              return ctx.prevSlide();\n            });\n            i0.ɵɵtext(4, \"\\u276E\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"button\", 4);\n            i0.ɵɵlistener(\"click\", function SliderComponent_Template_button_click_5_listener() {\n              return ctx.nextSlide();\n            });\n            i0.ɵɵtext(6, \"\\u276F\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"div\", 5);\n            i0.ɵɵtemplate(8, SliderComponent_span_8_Template, 1, 2, \"span\", 6);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"transform\", \"translateX(\" + -ctx.currentIndex * (100 / ctx.slidesPerPage) + \"%)\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.displayedSlides);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(4, _c0).constructor(ctx.totalPages));\n          }\n        },\n        dependencies: [CommonModule, i1.NgForOf],\n        styles: [\".slider-container[_ngcontent-%COMP%]{position:relative;width:100%;max-width:1200px;margin:20px auto;overflow:hidden;border-radius:8px;box-shadow:0 4px 8px #0000001a;background-color:#f0f0f0}.slider-wrapper[_ngcontent-%COMP%]{display:flex;transition:transform 1s ease-in-out}.slide[_ngcontent-%COMP%]{min-width:calc(100% / 3);box-sizing:border-box;padding:20px;text-align:center;display:flex;flex-direction:column;align-items:center;justify-content:center}.slide-image[_ngcontent-%COMP%]{max-width:100%;height:150px;object-fit:contain;margin-bottom:15px}.slide-text[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:1.4em;color:#333;margin-bottom:8px}.slide-text[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:.9em;color:#666}.prev-button[_ngcontent-%COMP%], .next-button[_ngcontent-%COMP%]{position:absolute;top:50%;transform:translateY(-50%);background-color:#00000080;color:#fff;border:none;padding:10px 15px;cursor:pointer;font-size:1.5em;border-radius:50%;z-index:10}.prev-button[_ngcontent-%COMP%]{left:10px}.next-button[_ngcontent-%COMP%]{right:10px}.slider-dots[_ngcontent-%COMP%]{position:absolute;bottom:10px;width:100%;display:flex;justify-content:center;gap:8px}.slider-dots[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:block;width:10px;height:10px;border-radius:50%;background-color:#0000004d;cursor:pointer}.slider-dots[_ngcontent-%COMP%]   span.active[_ngcontent-%COMP%]{background-color:#007bff}@media (max-width: 768px){.slide[_ngcontent-%COMP%]{min-width:100%}.slider-container[_ngcontent-%COMP%]{max-width:400px}}@media (min-width: 769px) and (max-width: 1024px){.slide[_ngcontent-%COMP%]{min-width:50%}.slider-container[_ngcontent-%COMP%]{max-width:800px}}\"]\n      });\n    }\n  }\n  return SliderComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
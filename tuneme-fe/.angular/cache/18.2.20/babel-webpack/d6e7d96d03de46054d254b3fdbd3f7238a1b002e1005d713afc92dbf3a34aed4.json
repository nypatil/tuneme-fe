{"ast":null,"code":"import { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/appointment.service\";\nimport * as i3 from \"@angular/common\";\nfunction AppointmentReminderComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Appointment Name is required and must be at least 3 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppointmentReminderComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const center_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", center_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(center_r1);\n  }\n}\nfunction AppointmentReminderComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Appointment Center is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppointmentReminderComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" A valid future date is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppointmentReminderComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Appointment Time is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppointmentReminderComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"h3\");\n    i0.ɵɵtext(2, \"Submitted Data:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"pre\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.submittedJson);\n  }\n}\nexport let AppointmentReminderComponent = /*#__PURE__*/(() => {\n  class AppointmentReminderComponent {\n    constructor(fb, appointmentService) {\n      this.fb = fb;\n      this.appointmentService = appointmentService;\n      this.submittedJson = null;\n      this.minDate = this.getMinDate();\n    }\n    ngOnInit() {\n      this.initializeForm();\n      this.loadAppointmentCenters();\n    }\n    initializeForm() {\n      this.appointmentForm = this.fb.group({\n        appointmentName: ['', [Validators.required, Validators.minLength(3)]],\n        appointmentCenter: ['', Validators.required],\n        appointmentDate: ['', Validators.required],\n        appointmentTime: ['', Validators.required]\n      });\n    }\n    loadAppointmentCenters() {\n      this.centerList$ = this.appointmentService.getAppointmentCenters();\n    }\n    getMinDate() {\n      const today = new Date();\n      return today.toISOString().split('T')[0];\n    }\n    onSubmit() {\n      if (this.appointmentForm.valid) {\n        this.processFormSubmission(this.appointmentForm.value);\n      } else {\n        this.appointmentForm.markAllAsTouched();\n      }\n    }\n    processFormSubmission(formData) {\n      this.submittedJson = JSON.stringify(formData, null, 2);\n      console.log('Form Submitted:', formData);\n      // In a real app, you would send this data to a backend service.\n    }\n    static {\n      this.ɵfac = function AppointmentReminderComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AppointmentReminderComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AppointmentService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AppointmentReminderComponent,\n        selectors: [[\"app-appointment-reminder\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 39,\n        vars: 11,\n        consts: [[1, \"container\"], [\"aria-labelledby\", \"form-title\", 3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"appointmentName\"], [\"type\", \"text\", \"id\", \"appointmentName\", \"formControlName\", \"appointmentName\", \"aria-describedby\", \"name-helper\", 1, \"form-control\"], [\"id\", \"name-helper\", 1, \"form-text\", \"text-muted\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"appointmentCenter\"], [\"id\", \"appointmentCenter\", \"formControlName\", \"appointmentCenter\", \"aria-describedby\", \"center-helper\", 1, \"form-control\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"center-helper\", 1, \"form-text\", \"text-muted\"], [\"for\", \"appointmentDate\"], [\"type\", \"date\", \"id\", \"appointmentDate\", \"formControlName\", \"appointmentDate\", \"aria-describedby\", \"date-helper\", 1, \"form-control\", 3, \"min\"], [\"id\", \"date-helper\", 1, \"form-text\", \"text-muted\"], [\"for\", \"appointmentTime\"], [\"type\", \"time\", \"id\", \"appointmentTime\", \"formControlName\", \"appointmentTime\", \"aria-describedby\", \"time-helper\", 1, \"form-control\"], [\"id\", \"time-helper\", 1, \"form-text\", \"text-muted\"], [\"type\", \"submit\", \"title\", \"Click to save the appointment details\", 3, \"disabled\"], [\"class\", \"result-container\", \"aria-live\", \"polite\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [3, \"value\"], [\"aria-live\", \"polite\", 1, \"result-container\"]],\n        template: function AppointmentReminderComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Appointment Reminder\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function AppointmentReminderComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n            i0.ɵɵtext(6, \"Appointment Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 4);\n            i0.ɵɵelementStart(8, \"small\", 5);\n            i0.ɵɵtext(9, \"Please enter the purpose of the appointment (e.g., \\\"Dentist Check-up\\\").\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(10, AppointmentReminderComponent_div_10_Template, 2, 0, \"div\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"div\", 2)(12, \"label\", 7);\n            i0.ɵɵtext(13, \"Appointment Center\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"select\", 8)(15, \"option\", 9);\n            i0.ɵɵtext(16, \"Select a Center\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(17, AppointmentReminderComponent_option_17_Template, 2, 2, \"option\", 10);\n            i0.ɵɵpipe(18, \"async\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"small\", 11);\n            i0.ɵɵtext(20, \"Select the city where the appointment will take place.\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(21, AppointmentReminderComponent_div_21_Template, 2, 0, \"div\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(22, \"div\", 2)(23, \"label\", 12);\n            i0.ɵɵtext(24, \"Select Appointment Date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(25, \"input\", 13);\n            i0.ɵɵelementStart(26, \"small\", 14);\n            i0.ɵɵtext(27, \"You cannot select a past date.\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(28, AppointmentReminderComponent_div_28_Template, 2, 0, \"div\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(29, \"div\", 2)(30, \"label\", 15);\n            i0.ɵɵtext(31, \"Select Time (24-hour format)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(32, \"input\", 16);\n            i0.ɵɵelementStart(33, \"small\", 17);\n            i0.ɵɵtext(34, \"Use the 24-hour clock (e.g., 14:30 for 2:30 PM).\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(35, AppointmentReminderComponent_div_35_Template, 2, 0, \"div\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(36, \"button\", 18);\n            i0.ɵɵtext(37, \"Submit\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(38, AppointmentReminderComponent_div_38_Template, 5, 1, \"div\", 19);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            let tmp_3_0;\n            let tmp_5_0;\n            let tmp_6_0;\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.appointmentForm);\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.appointmentForm.get(\"appointmentName\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.appointmentForm.get(\"appointmentName\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.appointmentForm.get(\"appointmentName\")) == null ? null : tmp_1_0.touched)));\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(18, 9, ctx.centerList$));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.appointmentForm.get(\"appointmentCenter\")) == null ? null : tmp_3_0.invalid) && (((tmp_3_0 = ctx.appointmentForm.get(\"appointmentCenter\")) == null ? null : tmp_3_0.dirty) || ((tmp_3_0 = ctx.appointmentForm.get(\"appointmentCenter\")) == null ? null : tmp_3_0.touched)));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"min\", ctx.minDate);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.appointmentForm.get(\"appointmentDate\")) == null ? null : tmp_5_0.invalid) && (((tmp_5_0 = ctx.appointmentForm.get(\"appointmentDate\")) == null ? null : tmp_5_0.dirty) || ((tmp_5_0 = ctx.appointmentForm.get(\"appointmentDate\")) == null ? null : tmp_5_0.touched)));\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.appointmentForm.get(\"appointmentTime\")) == null ? null : tmp_6_0.invalid) && (((tmp_6_0 = ctx.appointmentForm.get(\"appointmentTime\")) == null ? null : tmp_6_0.dirty) || ((tmp_6_0 = ctx.appointmentForm.get(\"appointmentTime\")) == null ? null : tmp_6_0.touched)));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", ctx.appointmentForm.invalid);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.submittedJson);\n          }\n        },\n        dependencies: [CommonModule, i3.NgForOf, i3.NgIf, i3.AsyncPipe, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".container[_ngcontent-%COMP%]{max-width:600px;margin:2rem auto;padding:2rem;border-radius:8px;box-shadow:0 2px 4px #0000001a}h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:1.5rem}.form-group[_ngcontent-%COMP%]{margin-bottom:1.25rem}.form-control[_ngcontent-%COMP%]{width:100%;padding:.5rem;border:1px solid #ccc;border-radius:4px}.form-text[_ngcontent-%COMP%]{color:#6c757d;margin-top:.25rem}.alert-danger[_ngcontent-%COMP%]{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb;padding:.75rem 1.25rem;margin-top:.5rem;border:1px solid transparent;border-radius:4px}button[_ngcontent-%COMP%]{width:100%;padding:.75rem;font-weight:700;color:#fff;background-color:#ed8b00;border:none;border-radius:4px;cursor:pointer;transition:background-color .2s}button[_ngcontent-%COMP%]:disabled{background-color:#ccc;cursor:not-allowed}button[_ngcontent-%COMP%]:not(:disabled):hover{background-color:#d67c00}.result-container[_ngcontent-%COMP%]{margin-top:2rem;padding:1rem;background-color:#f8f9fa;border:1px solid #dee2e6;border-radius:4px}pre[_ngcontent-%COMP%]{background-color:#e9ecef;padding:1rem;border-radius:4px;white-space:pre-wrap;word-wrap:break-word}\"]\n      });\n    }\n  }\n  return AppointmentReminderComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
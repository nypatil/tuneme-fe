{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.currentUserRole = 'admin'; // Example: 'admin', 'user', 'guest'\n  }\n  getUserRole() {\n    return this.currentUserRole;\n  }\n  // You can add methods to change role for testing purposes\n  setRole(role) {\n    this.currentUserRole = role;\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthService","constructor","currentUserRole","getUserRole","setRole","role","factory","ɵfac","providedIn"],"sources":["C:\\Users\\np59585\\gemini-angular-app\\Sample1\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private currentUserRole: string = 'admin'; // Example: 'admin', 'user', 'guest'\r\n\r\n  constructor() { }\r\n\r\n  getUserRole(): string {\r\n    return this.currentUserRole;\r\n  }\r\n\r\n  // You can add methods to change role for testing purposes\r\n  setRole(role: string) {\r\n    this.currentUserRole = role;\r\n  }\r\n}\r\n"],"mappings":";AAKA,OAAM,MAAOA,WAAW;EAGtBC,YAAA;IAFQ,KAAAC,eAAe,GAAW,OAAO,CAAC,CAAC;EAE3B;EAEhBC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACD,eAAe;EAC7B;EAEA;EACAE,OAAOA,CAACC,IAAY;IAClB,IAAI,CAACH,eAAe,GAAGG,IAAI;EAC7B;;;uCAZWL,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAM,OAAA,EAAXN,WAAW,CAAAO,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}